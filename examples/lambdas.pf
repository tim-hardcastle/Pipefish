var

add = func(x, y) :
    x + y

g = addN(5)

condition = func (x, y) : x > 0


foo = func(x int) :
    x

troz = func(x) :
    x

zort = func(x, y int) :
    x + y

const 




action = func (x, y int) : x - 1, y * 2

def

addN (n) :             //  Look, a closure!
    func(x) : x + n

apply (f) to (x tuple) :
    f x

apply (f) twice to (x tuple) :
    f f x

while (p) do (f) to (x tuple) :
    p x : while p do f to f x
    else : x

multiplyBy(i int) : 
    func(n int) : i * n

multiply(x, y int) :
    f(y)
given :
    f = multiplyBy(x)

