// A little app to go through the sourcecode and see if any error codes are either unmatched
// in the error file, or duplicated, or declared in the error file but unused.

import

"path/filepath"
"regexp"
"strings"

cmd

init :
    global $moduleDirectory
    get filenames from Filenames($moduleDirectory, RECURSIVE)
    allTheCode = "" // We can just put all the code in one string except the errorfile.
    errorFile = ""
    for _::filename = range filenames :
        filepath.ext(filename) == ".go" :
            get code from File(filename)
            filepath.base(filename) == "errorfile.go" :
                errorFile = code
            else :
                allTheCode = allTheCode + code
    post makeResult(allTheCode, errorFile)

def 

makeResult(allTheCode, errorFile string) :
    "Codes used are:\n\n" + prettyList codesUsed + ..
 .. "\n\nCodes defined are\n\n" + prettyList codesDefined
given :
    codesUsed := regexp.findAllString(`"[a-z]*\/[a-z\/]*"`, allTheCode, -1)
    codesDefined := regexp.findAllString(`"[a-z]*\/[a-z\/]*"`, errorFile, -1)

prettyList(L list) -> string :
    "  ▪ " + strings.Join(L, "\n  ▪ ")
