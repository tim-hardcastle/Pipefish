{	"name": "pipefish",
	
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#control"
		},
		{
			"include": "#numbers"
		},
		{	
			"include": "#headwords"
		},
		{
			"include": "#strings"
		},
		{	
			"include": "#comments"
		},
		{	
			"include": "#documentation"
		},
		{
			"include": "#punctuation"
		},
		{
			"include": "#continuations"
		},
		{	
			"include": "#logging"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.pipefish",
				"match": "\\b(and|false|for|given|global|golang|not|or|ref|true)\\b"
			}]
		},
		"control": {
			"patterns": [{
				"name": "keyword.control",
				"match": "\\b(break|continue|else|try)\\b"
			}]
		},
		"numbers": {
			"patterns": [
				{
				"name":"constant.numeric",
				"match": "((^|[^_0-9])[0-9]+\\.[0-9]+)|((^|[^_0-9])[0-9]+)|([^_0-9]0[xboXBO][0-9]+)"
				}
			]
		},
		"headwords": {
			"patterns": [{
					"name": "entity.name.type",
					"match": "\\b(cmd|const|def|external|import|newtype|private|var)\\b"
			}]
		},
		"strings": {
			"patterns": [
				{
				"name":"string.quoted.any.pipefish",
				"begin": "`",
				"end": "`"
				},
				{
				"name":"string.quoted.double.pipefish",
				"match": "\"[^\"\\\\]*(\\\\.[^\"\\\\]*)*\""
				}
			]
		},
		"comments": {
			"patterns": [				
				{
				"name": "comment.pipefish",
				"begin": "//",
				"end": "\n"
				}
			]
		},
		"documentation": {
			"patterns": [				
				{
					"name": "constant.other.option",
					"begin": "^(\\s)*~~",
					"end": "$",
					"patterns": [
						{
						"name":"keyword.operator",
						"begin": "`",
						"end": "`"
						}
					]
				}
			]
		},
		"logging": {
			"patterns": [
				{
				"name": "entity.name.function",
				"match": "\\\\\\\\([^\\/]|\/[^\\/])*"
				}
			]
		},
		"punctuation": {
			"patterns": [
				{
				"name": "keyword.pipefish",
				"match": "(==|!=| = |->|\\?>|\\>>|:|::|->|;|--|,|\\||\\.\\.\\.)"
				}
			]
		},
		"continuations": {
			"patterns": [
				{
				"name": "keyword.pipefish",
				"match": "(,)\\s*$|(\\.\\.)\\s*$|^\\s*(\\.\\.)"
				}
			]
		} 
	},
	"scopeName": "source.pipefish"
}
