{	"name": "pipefish",
	
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#control"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#constants"
		},
		{	
			"include": "#headwords"
		},
		{
			"include": "#strings"
		},
		{	
			"include": "#comments"
		},
		{	
			"include": "#documentation"
		},
		{
			"include": "#punctuation"
		},
		{
			"include": "#types"
		},
		{
			"include": "#continuations"
		},
		{	
			"include": "#logging"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword",
				"match": "\\b(and|false|given|global|golang|not|or|true)\\b"
			}]
		},
		"control": {
			"patterns": [{
				"name": "keyword.control",
				"match": "\\b(break|continue|else|try)\\b"
			}]
		},
		"numbers": {
			"patterns": [
				{
				"name":"constant.numeric",
				"match": "(?<![_0-9])[0][bB][01]+|(?<![_0-9])[0][oO][0-7]+|(?<![_0-9])[0][xX][0-9A-Fa-f]+|(?<![_0-9])[0-9]+"
				}
			]
		},
		"constants": {
			"patterns": [
				{
				"name":"variable.other.constant",
				"match": "\\b[A-Z][A-Z_]+\\b"
				}
			]
		},
		"headwords": {
			"patterns": [{
					"name": "keyword.control",
					"match": "\\b(cmd|const|def|external|import|newtype|private|var)\\b"
			}]
		},
		"types": {
			"patterns": [{
					"name": "entity.name.type",
					"match": "\\b(clone|clones|enum|struct|def|float|string|int|bool|type|secret|snippet|pair|list|map|set|error|null)\\b\\??|\\b[A-Z][a-z][A-Za-z]*\\b\\??"
			}]
		},
		"strings": {
			"patterns": [
				{
				"name":"string.quoted.any.pipefish",
				"begin": "`",
				"end": "`"
				},
				{
				"name":"string.quoted.double.pipefish",
				"match": "\"[^\"\\\\]*(\\\\.[^\"\\\\]*)*\""
				}
			]
		},
		"comments": {
			"patterns": [				
				{
				"name": "comment.pipefish",
				"begin": "//",
				"end": "\n"
				}
			]
		},
		"documentation": {
			"patterns": [				
				{
					"name": "constant.other.option",
					"begin": "^(\\s)*~~",
					"end": "$",
					"patterns": [
						{
						"name":"keyword.operator",
						"begin": "`",
						"end": "`"
						}
					]
				}
			]
		},
		"logging": {
			"patterns": [
				{
				"name": "entity.name.function",
				"match": "\\\\\\\\([^\\/]|\/[^\\/])*"
				}
			]
		},
		"punctuation": {
			"patterns": [
				{
				"name": "keyword.pipefish",
				"match": "(==|!=| = |->|\\?>|\\>>|:|::|->|;|--|,|\\.|\\||\\.\\.\\.)"
				}
			]
		},
		"continuations": {
			"patterns": [
				{
				"name": "keyword.pipefish",
				"match": "(,)\\s*$|(\\.\\.)\\s*$|^\\s*(\\.\\.)"
				}
			]
		} 
	},
	"scopeName": "source.pipefish"
}
